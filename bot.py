import telebot
import config1
import random

from telebot import types

cats = ['–ö–æ—Ç—ã - —ç–∫—Å—Ç—Ä–∞—Å–µ–Ω—Å—ã', '–ö–æ—à–∫–∞ –º–æ–∂–µ—Ç —Ä–æ–¥–∏—Ç—å 100-150 –∫–æ—Ç—è—Ç', '–°–∞–º—ã–π –±–æ–ª—å—à–æ–π –∫–æ—Ç –≤–µ—Å–∏–ª 21,3 –∫–≥',
        '–ö–æ—à–∫–∞ –º–æ–∂–µ—Ç –±–µ–∂–∞—Ç—å —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é 48 –∫–º/—á', '–°–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π –∫–æ—Ç –≤–µ—Å–∏—Ç 800 –≥—Ä',
        '–ö–æ—Ç—É-–±–æ—Ç—É –Ω–µ –Ω—É–∂–Ω–∞ –µ–¥–∞ (—Ö–æ—Ç—è –∏ –ø—Ä–æ—Å–∏—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ)', '–ù–µ –≤—Å–µ –∫–æ—Ç—ã –≤—ã–∑—ã–≤–∞—é—Ç –∞–ª–ª–µ—Ä–≥–∏—é, –∏ —ç—Ç–æ –Ω–µ –≤—Å–µ–≥–¥–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—É—à–∏—Å—Ç–æ—Å—Ç–∏']
sharks = ['–ê–∫—É–ª—ã —Å—Ç–∞—Ä—à–µ –¥–µ—Ä–µ–≤—å–µ–≤', '–ú–µ–≥–∞–ª–æ–¥–æ–Ω—ã –±—ã–ª–∏ —Å–∞–º—ã–º–∏ –∫—Ä—É–ø–Ω—ã–º–∏ –∞–∫—É–ª–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –∫–æ–≥–¥–∞-–ª–∏–±–æ –∂–∏–ª–∏', '–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∞–∫—É–ª—ã —Å–≤–µ—Ç—è—Ç—Å—è –≤ —Ç–µ–º–Ω–æ—Ç–µ',
          '–ê–∫—É–ª—ã –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ —Ä–∞–∑–ª–∏—á–∞—é—Ç —Ü–≤–µ—Ç', '–£ –∞–∫—É–ª –µ—Å—Ç—å —Å–≤–æ–∏ –ª–∏—á–Ω–æ—Å—Ç–∏', '–£ –∞–∫—É–ª –µ—Å—Ç—å —Å–≤–æ–∏ –ª–∏—á–Ω–æ—Å—Ç–∏', '–ê–∫—É–ª—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ç–µ—Ä—è—é—Ç –∏ –∑–∞–º–µ–Ω—è—é—Ç –∑—É–±—ã',
          '–ü–æ –≤—Å–µ–º—É –º–∏—Ä—É —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –±–æ–ª–µ–µ 400 –≤–∏–¥–æ–≤']

answers = ['–î–∞ –ø—Ä–æ—Å—Ç–æ —Å—É–ø–µ—Ä!', '–û—Ç–ª–∏—á–Ω–æ!', '–ù–µ –æ—á–µ–Ω—å, –∫–æ—Ä–º —Å–∏–ª—å–Ω–æ –ø–æ–¥–æ—Ä–æ–∂–∞–ª!', '–í —Ü–µ–ª–æ–º –Ω–æ—Ä–º, –Ω–æ —è —É—Å—Ç–∞–ª –Ω–∞ —Ä–∞–±–æ—Ç–µ.', '–í –Ω–æ—Ä–º–µ!',
           '–ë–µ—Å—è—Ç –∫–æ–∂–∞–Ω—ã–µ', '–ü–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ –º–æ–π —Å—á–µ—Ç 5 –∫–≥ –∫–æ—Ä–º–∞ –ø—Ä–µ–º–∏—É–º']


animations = ['static/cats/AnimatedSticker1.tgs', 'static/cats/AnimatedSticker2.tgs']

animations_shark = ['static/sharks/AnimatedSticker_s1.tgs', 'static/sharks/AnimatedSticker_s2.tgs']


bot = telebot.TeleBot(config1.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('static/AnimatedSticker.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üò∫–§–∞–∫—Ç –æ –∫–æ—Ç–∏–∫–∞—Ö")
    item2 = types.KeyboardButton("ü¶à–§–∞–∫—Ç –æ–± –∞–∫—É–ª–∞—Ö")
    item3 = types.KeyboardButton("üòÄ–ö–∞–∫ –¥–µ–ª–∞?")

    markup.add(item1, item2, item3)


    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, "
                                      "–±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫–æ—Ç–∏–∫–æ–º.\n"
                                      "–Ø –∑–Ω–∞—é –º–Ω–æ–≥–æ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤ –æ –∫–æ—Ç–∞—Ö.".format(message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üò∫–§–∞–∫—Ç –æ –∫–æ—Ç–∏–∫–∞—Ö':
            bot.send_message(message.chat.id, str(random.choice(cats)))
            sti = open((random.choice(animations)), 'rb')
            bot.send_sticker(message.chat.id, sti)
        elif message.text == 'ü¶à–§–∞–∫—Ç –æ–± –∞–∫—É–ª–∞—Ö':
            bot.send_message(message.chat.id, str(random.choice(sharks)))
            sti = open((random.choice(animations_shark)), 'rb')
            bot.send_sticker(message.chat.id, sti)
        elif message.text == 'üòÄ–ö–∞–∫ –¥–µ–ª–∞?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
            markup.add(item1, item2)

            bot.send_message(message.chat.id, str(random.choice(answers) + ' –ê —Å–∞–º –∫–∞–∫?'), reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–¢—ã —Å–∫–∞–∑–∞–ª "' + message.text + '" –ê —è –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Å–∫–∞–∑—Ç—å üòø. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–∫—Ç –ø—Ä–æ –∫–æ—Ç–∞ –Ω–∞–∂–º–∏ /start, –∏ –º—ã –Ω–∞—á–Ω–µ–º –≤—Å–µ —Å–Ω–∞—á–∞–ª–∞')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æüò∫')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ù–µ –≥—Ä—É—Å—Ç–∏ –¥–∞–≤–∞–πüòø')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòÄ–ö–∞–∫ –¥–µ–ª–∞?",
                                  reply_markup=None)

            # show alert
            # bot.answer_callback_query(chat_id=call.message.chat.id, show_alert=False, text="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")

    except Exception as e:
        print(repr(e))


# RUN
bot.polling(none_stop=True)
